# Default values for ci-manager
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global:
  loadbalancerURL: ""
  airgap: false
  imagePullSecrets: []
replicaCount: 1
maxSurge: 1
maxUnavailable: 0
image:
  registry: docker.io
  repository: harness/ci-manager-signed
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1"
  digest: ""
  imagePullSecrets: []
securityImage:
  image:
    registry: docker.io
    repository: harness/sto-plugin
    tag: latest
    digest: ""
    imagePullSecrets: []
waitForInitContainer:
  image:
    registry: docker.io
    repository: harness/helm-init-container
    pullPolicy: IfNotPresent
    tag: "latest"
    digest: ""
    imagePullSecrets: []
ci_images:
  addon:
    image:
      registry: docker.io
      digest: ""
      tag: "1.16.4"
      repository: harness/ci-addon
      imagePullSecrets: []
  lite_engine:
    image:
      registry: docker.io
      digest: ""
      tag: "1.16.4"
      repository: harness/ci-lite-engine
      imagePullSecrets: []
  git_clone:
    image:
      registry: docker.io
      digest: ""
      tag: "1.2.7-rootless"
      repository: harness/drone-git
      imagePullSecrets: []
  kaniko:
    image:
      registry: docker.io
      digest: ""
      tag: "1.7.0"
      repository: plugins/kaniko
      imagePullSecrets: []
  kaniko_ecr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.7.0"
      repository: plugins/kaniko-ecr
      imagePullSecrets: []
  kaniko_gcr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.7.0"
      repository: plugins/kaniko-gcr
      imagePullSecrets: []
  kaniko_acr:
    image:
      registry: docker.io
      digest: ""
      tag: "1.7.1"
      repository: plugins/kaniko-acr
      imagePullSecrets: []
  gcs_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.3.0"
      repository: plugins/gcs
      imagePullSecrets: []
  s3_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.2.0"
      repository: plugins/s3
      imagePullSecrets: []
  artifactory_upload:
    image:
      registry: docker.io
      digest: ""
      tag: "1.2.0"
      repository: plugins/artifactory
      imagePullSecrets: []
  gcs_cache:
    image:
      registry: docker.io
      digest: ""
      tag: "1.4.6"
      repository: plugins/cache
      imagePullSecrets: []
  s3_cache:
    image:
      registry: docker.io
      digest: ""
      tag: "1.4.6"
      repository: plugins/cache
      imagePullSecrets: []
stoServiceGlobalToken:
  name: harness-secrets
  key: stoAppHarnessToken
mongoSecrets:
  userName:
    name: harness-secrets
    key: mongodbUsername
  password:
    name: mongodb-replicaset-chart
    key: mongodb-root-password
timescaleSecret:
  password:
    name: harness-secrets
    key: timescaledbPostgresPassword
java:
  memory: 4096
appLogLevel: INFO
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "harness-default"
podAnnotations: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext:
  runAsUser: 65534
  runAsNonRoot: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
service:
  type: ClusterIP
  port: 7090
  grpcport: 9979
resources:
  limits:
    cpu: 1
    memory: 8192Mi
  requests:
    cpu: 1
    memory: 1400Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
